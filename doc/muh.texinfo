\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename muh.info
@settitle Muh Manual
@c %**end of header

@comment $Id: muh.texinfo,v 1.2 2002/03/24 09:40:18 sebk Exp $

@include version.texi

@setchapternewpage odd

@ifinfo
This is the Muh manual.

Copyright (C) 2002 Sebastian Kienzl

@dircategory Texinfo documentation system
@direntry
* Muh: (muh).		The Muh manual
@end direntry
@end ifinfo

@titlepage
@sp 10
@center @titlefont{The Muh manual}
@page
@vskip 0pt plus 1filll
Copyright @copyright{} 2002 Sebastian Kienzl
@end titlepage

@node Top
@top Muh Manual

This is Edition @value{EDITION} of the @cite{Muh Manual}, last updated @value{UPDATED}.

@menu
* Introduction::          Why you need an irc-bouncer and how it is used
* Installation::          How to install Muh
* Command Line Options::  Invocation of Muh
* Muh Commands::          Commands while Muh is running
* Muhrc Commands::        Statements in your muhrc
@end menu


@node Introduction
@chapter What is an irc-bouncer?
A bouncer doesn't do anything else than diverting a network-connection.

In case of an irc-bouncer, connections from your irc-program (client)
are diverted by the bouncer to a irc-server.

"What is this good for?", you might ask.

Well, let's assume you've got a dialup-connection.
If somebody performs a @command{/WHOIS} on you it shows something like
"yournick is yournick!yourident@@dialup66-r-v.isp.at".

If you are vain you don't want people to see this stupid hostname.
So you get a account on a machine with a cool hostname (from now
on refered as middleman), get Muh running there and a /whois
on you will show middleman's hostname, since the connection to
the irc-server is actually originating from middleman.

Another advantage is that network-attacks aren't
really destinating to YOUR computer but to middleman, which
is in theory a machine that can't be brought down.

@chapter What makes Muh special over other bouncers?
Muh is very straight and simple to set up and the probably most
important and interesting feature is that Muh keeps the
middleman-->irc-server connection up even after you disconnect with your
client.

This means Muh prevents people from using your nick
(this is especially handy on nets like ircnet, since there are
no services like on dalnet etc) and tells people who message you
that you're not here and logs what these people said.

Upon your next connect to Muh, it will let the channels you've
been in in your last session pop up, which means that you'll
keep your status in these channels!

Besides that Muh's got a very enhanced flood-protection making it
(almost) impossible to disconnect Muh.

@chapter Copyright

Muh has been written by Sebastian Kienzl @email{zap "at" riot.org} and
others.
Muh is licensed under the GPL. See COPYING for details.

@node Command Line Options
@chapter Command Line Options
@table @asis
@item @option{-f}
Stay in foreground (don't fork)
@item @option{-d directory}
Specifies a different directory than the default for muhrc, messages and log
@item @option{-c}
You will be prompted for a word to crypt. The output can be used as "password"
in muhrc if you don't wanna have the password stored in clear text.
Note that you'll still have to authorize with the unencrypted password.
@end table

@node Muh Commands
@chapter Muh Commands
Muh accepts following commands to be issued by the client via @command{/MUH <command>}.

Note that some irc-clients might require a prefix such as @command{/QUOTE} or @command{/RAW} to send
commands they don't know about.

@table @asis
@item @command{HELP}
Display supported commands
@item @command{READ}
Read received messages
@item @command{DEL}
Delete all messages
@item @command{PRINT}
Prints Muh's server-list. Servers prefixed with '+' work, those with '-' don't.
@item @command{JUMP [servernumber]}
Jump to next server in serverlist. if [servernumber] (see PRINT) is specified, Muh
will jump to this server (even if marked as not working).
@item @command{REHASH}
Reread config-file. Note that this can also be performed by sending a SIGHUP to
Muh (see @command{kill(1)}). If "realname" or "username" have been changed Muh will reconnect
to it's current server.
@item @command{DIE}
Terminate Muh.
@end table


@node Installation
@chapter Installation

Create a @file{.muh/}-directory in your homedir and copy @file{muhrc} there
(it will propably reside in @file{/usr/share/muh}, depending on your os/distribution).

Edit @file{muhrc}, @emph{make sure noone except you has read-access} and launch Muh.

To make sure Muh's running all day there is a script called @file{check-muh}
that came with muh. Edit it as well and make @command{crontab(5)} call it periodically.

@node Muhrc Commands
@chapter Muhrc Commands

There are numerous commands with which you can extensively customize Muh's behaviour.
The must be placed in the @file{muhrc} that muh reads on startup, it is usually @file{$HOME/.muh/muhrc}.

@chapter Required settings

@table @asis
@item @command{nickname <string>}
The nickname muh will use on IRC. If it is occupied it will switch to the alternate nickname and will periodically attempt
to get that nick.

@item @command{altnickname <string>}
Alternative nickname if nickname configured with @command{nickname} is occupied. If this one is occupied as
well muh will use a random nickname.

@item @command{realname <string>}
Your name on IRC as shown by the @command{/WHOIS}-command.

@item @command{username <string>}
Your Unix-username. If there is no @command{identd} running on your site this username will be used.

@item @command{listenport <int>}
This is the port on which Muh will wait for connects: Use this as the port to connect to in your IRC-Client.

@item @command{password <string>}
This is the password that protects your Muh-session. If it is exactly 13 characters in length Muh assumes it
is crypted. Try @command{muh -c} to get a crypted version of your password.

@item @command{servers <serverlist>}
Put all of Muh's IRC-Servers here. It will cycle through the list.

@end table

@chapter Optional settings

@table @asis
@item @command{logging <boolean>: true}
Log messages that other users send you while you are not connected?

@item @command{leave <boolean>: true}
Leave all the channels you're in when you disconnect your IRC-client from Muh?

@item @command{leavemsg <string>: empty}
This string will be sent as an action to all the channels you're in when you disconnect your client.

@item @command{away <string>: empty}
If you're not connected people messaging you will receive this string once.

@item @command{getnick <boolean>: true}
Attempt to get the nickname specified with @command{nick} if occupied?

@item @command{nevergiveup <boolean>: false}
If set then Muh will never stop trying to connect to a server, otherwise it will terminate if there
is no functional IRC-server left.

@item @command{rejoin <boolean>: false}
Rejoin the channels Muh was in after changing IRC-server?

@item @command{bind <hostname>: none}
Bind to another IP than the default? This is commonly referred as the VHOST. (todo: ipv6)

@item @command{antiidle <boolean>: false}
If set then the IRC-idle-time will get reset every ten minutes by sending a dummy-message.

@item @command{norestricted <boolean>: false}
Muh won't tolerate a restricted (+r) connection. If a connection gets restricted Muh will
jump to the next IRC-server available.

@item @command{forwardmsg <string>: none}
If set Muh will collect the messages it has received within 3 minutes
and pipe them to the program specified here.

@item @command{hosts <permissionlist>: all allowed}
List the hosts that are allowed to connect to Muh here. Notice that the default-match
is always true so you need to explicitly forbid all other hosts at the very end of your list.
Muh always tries to match both the IP and the hostname.

@item @command{people <permissionlist>: all allowed}
List the people (IRC-hostmask style) that are allowed to send you private messages. Default-match is always true.

@item @command{dccbounce <boolean>: false}
Also bounce all DCC's? Keep in mind that if you send/receive files that the data will go through the site Muh is running on.
MIRC-Style resumes work as well.

@item @command{dccbindclient <string>: empty}
Bind passive DCC's to another IP than the default. This is usually only needed in delicate network-environments and you'll
definitely know when this is fance.

@item @command{logfull <boolean>: false}
Log all channel-, server- and private traffic to log files?
This might get you many big files - but you have something to read when everybody else is idle.

@item @command{logfilenametemplate <string>: empty}
obsolete?

@item @command{logtimestamptemplate <string>: [%a %d %b %H:%M:%S]}
obsolete?

@end table

@bye

